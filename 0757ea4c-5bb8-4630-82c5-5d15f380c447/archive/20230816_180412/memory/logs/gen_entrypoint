[{"type": "system", "data": {"content": "You will get information about a codebase that is currently on disk in the current folder.\nFrom this you will answer with code blocks that includes all the necessary unix terminal commands to a) install dependencies b) run all necessary parts of the codebase (in parallel if necessary).\nDo not install globally. Do not use sudo.\nDo not explain the code, just give the commands.\nDo not use placeholders, use example values (like . for a folder argument) if necessary.\n", "additional_kwargs": {}}}, {"type": "human", "data": {"content": "Information about the codebase:\n\nLet's start with the entry point of the application, which is the `main.py` file. This file will create an instance of the `WebhookHandler` class and start the application.\n\n`main.py`\n```python\nfrom webhook_handler import WebhookHandler\n\ndef main():\n    handler = WebhookHandler()\n    handler.start()\n\nif __name__ == \"__main__\":\n    main()\n```\n\nNext, let's define the `WebhookHandler` class in the `webhook_handler.py` file. This class will handle the incoming webhook, parse the request, and trigger the workflow.\n\n`webhook_handler.py`\n```python\nfrom workflow import Workflow\n\nclass WebhookHandler:\n    def __init__(self):\n        self.workflow = Workflow()\n\n    def start(self):\n        # Placeholder for starting the webhook handler\n        pass\n\n    def handle_request(self, request):\n        # Parse the request\n        # Trigger the workflow\n        self.workflow.execute(request)\n```\n\nNext, let's define the `Workflow` class in the `workflow.py` file. This class will manage the workflow, executing each step in sequence.\n\n`workflow.py`\n```python\nfrom step import CreateOrderStep, UpdateOrderStatusStep, GetMenuStep, PublishErrorStep\n\nclass Workflow:\n    def __init__(self):\n        self.steps", "additional_kwargs": {}, "example": false}}, {"type": "ai", "data": {"content": "```bash\n# a) Install dependencies\npip install -r requirements.txt\n\n# b) Run all necessary parts of the codebase\npython main.py\n```", "additional_kwargs": {}, "example": false}}]