Assumptions:
1. We are creating a simple Python application that fetches data from an API and processes it.
2. The application will be structured in a modular way, with separate files for different functionalities.
3. The application will use the requests library to fetch data from the API.
4. The application will use the json library to parse the fetched data.
5. The application will use pytest for testing.

Core Classes, Functions, Methods:
1. `main.py`: This is the entry point of the application. It will contain the main function which will call other functions to fetch and process data.
2. `api.py`: This file will contain the `fetch_data` function which will be responsible for fetching data from the API.
3. `processor.py`: This file will contain the `process_data` function which will be responsible for processing the fetched data.
4. `test.py`: This file will contain the test cases for the application.

Now, let's write the code for each file.

main.py
```python
import api
import processor

def main():
    # Fetch data from API
    data = api.fetch_data()
    
    # Process the fetched data
    processed_data = processor.process_data(data)
    
    print(processed_data)

if __name__ == "__main__":
    main()
```

api.py
```python
import requests
import json

def fetch_data():
    # Fetch data from API
    response = requests.get('https://api.example.com/data')
    
    # Parse the JSON data
    data = json.loads(response.text)
    
    return data
```

processor.py
```python
def process_data(data):
    # Process the data
    processed_data = [item['field'] for item in data]
    
    return processed_data
```

test.py
```python
import pytest
import api
import processor

def test_fetch_data():
    data = api.fetch_data()
    assert isinstance(data, list)

def test_process_data():
    data = [{'field': 'value'}]
    processed_data = processor.process_data(data)
    assert processed_data == ['value']
```

requirements.txt
```
requests==2.25.1
pytest==6.2.4
```

This is a simple Python application that fetches data from an API and processes it. The application is structured in a modular way, with separate files for different functionalities. The `main.py` file is the entry point of the application. It calls the `fetch_data` function from the `api.py` file to fetch data from the API, and the `process_data` function from the `processor.py` file to process the fetched data. The `test.py` file contains the test cases for the application. The `requirements.txt` file lists the dependencies of the application.