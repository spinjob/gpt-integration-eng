Program Specification:

The program is a Python application that integrates two APIs: the Marketplace API and the Point-of-Sale API. The application will be triggered by a webhook called orderCreateWebhook from the Marketplace API. The webhook will be configured to send a POST request to a configured URL. 

The application will perform a series of steps, each step being an HTTP request to one of the two APIs. The steps are as follows:

1. Create an order in the Point-of-Sale API using data from the webhook.
2. Update the order status in the Marketplace API.
3. Get the menu from the Point-of-Sale API.
4. If there is an error in any of the previous steps, publish the error to the Marketplace API.

The data mapping between each step will be defined by a JSON object. The JSON object will describe how to map and adapt a value coming from a configuration, webhook request body, or previous HTTP requests response body.

Core Classes, Functions, and Methods:

1. `APIClient`: This class will be responsible for making HTTP requests to the APIs. It will have methods for each type of request (GET, POST, etc.) and will handle authentication.

2. `WebhookHandler`: This class will be responsible for receiving the webhook and triggering the workflow. It will parse the webhook data and pass it to the workflow.

3. `Workflow`: This class will be responsible for executing the steps of the workflow. It will use the `APIClient` to make the necessary API requests and will handle the data mapping between steps.

4. `DataMapper`: This class will be responsible for mapping data between steps according to the JSON mapping object. It will have methods for each type of mapping operation (copying a value, applying a formula, etc.).

5. `ErrorHandler`: This class will be responsible for handling errors that occur during the workflow. It will use the `APIClient` to publish the error to the Marketplace API.

6. `main()`: This function will be the entry point of the application. It will create instances of the above classes and start the webhook listener.

7. `get_auth_token(api)`: This function will be responsible for getting the authentication token for a given API. It will be used by the `APIClient`.

8. `apply_formula(formula, value)`: This function will be responsible for applying a formula to a value. It will be used by the `DataMapper`.

9. `parse_webhook_data(data)`: This function will be responsible for parsing the data from the webhook. It will be used by the `WebhookHandler`.

10. `execute_workflow_step(step, data)`: This function will be responsible for executing a step of the workflow. It will be used by the `Workflow`.

11. `publish_error(error)`: This function will be responsible for publishing an error to the Marketplace API. It will be used by the `ErrorHandler`.