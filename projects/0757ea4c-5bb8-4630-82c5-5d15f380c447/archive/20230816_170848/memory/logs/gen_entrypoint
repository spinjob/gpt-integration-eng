[{"type": "system", "data": {"content": "You will get information about a codebase that is currently on disk in the current folder.\nFrom this you will answer with code blocks that includes all the necessary unix terminal commands to a) install dependencies b) run all necessary parts of the codebase (in parallel if necessary).\nDo not install globally. Do not use sudo.\nDo not explain the code, just give the commands.\nDo not use placeholders, use example values (like . for a folder argument) if necessary.\n", "additional_kwargs": {}}}, {"type": "human", "data": {"content": "Information about the codebase:\n\n`main.py`\n```python\nimport json\nfrom flask import Flask, request\nfrom oauth2_client import OAuth2Client\nfrom webhook_handler import WebhookHandler\nfrom workflow import Workflow\n\napp = Flask(__name__)\n\nmarketplace_client = OAuth2Client(\n    client_id='be04e745-844d-4a6c-8fba-f71199dc8f05',\n    client_secret='MD727PM35KZCWP337TKQ',\n    token_url='https://partners.cloudkitchens.com/v1/auth/token',\n    scope='callback.error.write manager.menus manager.orders menus.async_job.read menus.get_current menus.read menus.upsert menus.upsert_hours orders.read ping'\n)\n\npos_client = OAuth2Client(\n    client_id='04db98cc-0c84-47e2-b57f-bfd6329c4675',\n    client_secret='NUCGB6VKFLYQBZPMMBLA',\n    token_url='https://partners.cloudkitchens.com/v1/auth/token',\n    scope='menus.get_current menus.publish orders.update storefront.store_availability menus.entity_suspension orders.create'\n)\n\nworkflow = Workflow(marketplace_client, pos_client)\n\n@app.route('/webhook', methods=['POST'])\ndef handle_webhook():\n    webhook_data = request.get_json()\n    handler = WebhookHandler(webhook_data)\n    workflow.trigger(handler)\n    return '', 200\n\nif __name__ == '__main__':\n    app.run(port", "additional_kwargs": {}, "example": false}}, {"type": "ai", "data": {"content": "a) Install dependencies:\n\n```bash\npip install --user flask oauth2client\n```\n\nb) Run all necessary parts of the codebase:\n\n```bash\npython main.py\n```", "additional_kwargs": {}, "example": false}}]