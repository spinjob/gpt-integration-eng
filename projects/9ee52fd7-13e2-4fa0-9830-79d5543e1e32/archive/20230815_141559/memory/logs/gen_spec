[{"type": "system", "data": {"content": "You will get instructions for code to write.\nYou will write a very long answer. Make sure that every detail of the architecture is, in the end, implemented as code.\n\nThink step by step and reason yourself to the right decisions to make sure we get it right.\nYou will first lay out the names of the core classes, functions, methods that will be necessary, as well as a quick comment on their purpose.\n\nThen you will output the content of each file including ALL code.\nEach file must strictly follow a markdown code block format, where the following tokens must be replaced such that\nFILENAME is the lowercase file name including the file extension,\nLANG is the markup code block language for the code's language, and CODE is the code:\n\nFILENAME\n```LANG\nCODE\n```\n\nDo not comment on what every file does\n\nYou will start with the \"entrypoint\" file, then go to the ones that are imported by that file, and so on.\nPlease note that the code should be fully functional. No placeholders.\n\nFollow a language and framework appropriate best practice file naming convention.\nMake sure that files contain all imports, types etc. Make sure that code in different files are compatible with each other.\nEnsure to implement all code, if you are unsure, write a plausible implementation.\nInclude module dependency or package manager dependency definition file.\nBefore you finish, double check that all parts of the architecture is present in the files.\n\nUseful to know:\nAlmost always put different classes in different files.\nAlways use the programming language the user asks for.\nFor Python, you always create an appropriate requirements.txt file.\nFor NodeJS, you always create an appropriate package.json file.\nAlways add a comment briefly describing the purpose of the function definition.\nAdd comments explaining very complex bits of logic.\nAlways follow the best practices for the requested languages for folder/file structure and how to package the project.\n\n\nPython toolbelt preferences:\n- pytest\n- dataclasses\n", "additional_kwargs": {}}}, {"type": "system", "data": {"content": "Instructions: Objective: Implement a Python application that integrates two APIs according to the specified API-specific security schemes and workflow requirements.  An engineer will rely on your initial implementation to run succesfully.  Please provide comments as you implement to allow a developer to understand the components of the implementation.\n\nAPI Context and Instructions: There are two REST Application Programming Interfaces (APIs) whose supported authentication schemes, requests, and data models that will be referenced in the requirements for this application.  In this section we define two categories of API information (1) The base URLs for a production and or a sandbox server for each API. These can be used to build the full HTTP request paths. (2) The Authentication or Security Scheme supported by the API.  Each APIs authentication scheme needs to be adhered to when you develop the project, so implement the project accordingly. \n\nFirst API:\nAPI (identifier: 98ef9a91-f0ca-4e0a-acd3-4618904fd6b4) Name: Point-of-Sale API\nProduction Server: https://partners.cloudkitchens.com\nSandbox Server: https://partners.cloudkitchens.com\n\nSecond API:\nAPI (identifier: 2389bc50-2646-4e94-bb34-86c9ea23cd7e) Name: Marketplace API\nProduction Server: https://partners.cloudkitchens.com\nSandbox Server: https://partners.cloudkitchens.com\n\nThe authentication schemes supported by each API are as follows: \n\nAPI (identifier: 2389bc50-2646-4e94-bb34-86c9ea23cd7e) Authentication:Security Scheme Type: oauth2\nAPI (identifier: 98ef9a91-f0ca-4e0a-acd3-4618904fd6b4) Authentication:Security Scheme Type: oauth2\n\n\nWorkflow Context and Instructions: The integration workflow will be defined by a \"workflow trigger\" and series of sequential \"workflow steps.\" A workflow trigger is the definition of the condition required to run the application.  Each step will be an HTTP request to one of the two involved APIs. \n\n Workflow Trigger Instructions: The workflow will be triggered by a webhook called menuPublishWebhook from API (2389bc50-2646-4e94-bb34-86c9ea23cd7e).  The webhook will be configured to send a POST request to a configured URL.  Use a placeholder for the webhook URL.\n\nWorkflow Steps Instructions: The following series of steps will contain a combination of text and JSON to describe each HTTP request.  The text will describe the details of the HTTP request (the API that supports the request, the HTTP method, and the path to append to the server base URL for the API.  \n\n The Data Mapping JSON will provide you detailed instructions on how to map and adapt a value coming from a configuration, webhook request body, or previous HTTP requests response body. The keys of the object represent either the key of a header/path/query parameter OR a dot-notation representation of a property in a request body. To help navigate the Data Mapping JSON, here are descriptions of its primary properties \n\n (MAPPING JSON PROPERTY: .input): The source of the value to use for the output property.  It will include an \"in\" property that will tell you where in the previous step to look for it; if it is \"body\" and the sourceNode is \"trigger\", then you will find the source value in the body of the webhook trigger.  If \"in\" is \"body\" and the sourceNode is an \"action\" then you will find the value in the response body of the previous steps HTTP request.  The \"sourcePath\" of the \"input\" is a dot-notation representation of where the property is located in an object like a webhook or response body. \n\n (MAPPING JSON PROPERTY .input.formulas) This array contains objects that each describe a function to apply to the input value to create the output value. The functions described should be applied in the order they appearin the array.\n\n (MAPPING JSON PROPERTY: .output) The details of the parameter or property that will contain the value from the input in the current steps HTTP request. The \"output.in\" value will tell you if the property is a header parameter, path parameter, query parameter, or a propert in the request body.  If \"in\" === \"body, then \"outputPath\" will describe a dot-notation representation of where the property is in the request body object.\n\nStep 1: API (identifier:2389bc50-2646-4e94-bb34-86c9ea23cd7e) getMenu\nStep 1 Data Mapping JSON:\n{\n  \"X-Store-Id\": {\n    \"id\": \"22633e6a-2fa3-4afc-9b0a-170758834518\",\n    \"stepIndex\": 1,\n    \"input\": {\n      \"type\": \"string\",\n      \"description\": \"The unique identifier of the store in the partner application. This ID, along with the `Application ID`, will be used to match the correct store when performing operations. It cannot be longer than 255 characters and must only contain printable ASCII characters.\",\n      \"example\": \"partner-store-unique-identifier\",\n      \"key\": \"storeId\",\n      \"path\": \"metadata.storeId\",\n      \"in\": \"body\",\n      \"actionId\": \"6fe6c316-03f5-49b5-8c88-8cbaf32e9a51\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"type\": \"string\",\n      \"description\": \"The unique identifier of the store in the partner application. This ID, along with the `Application ID`, will be used to match the correct store when performing operations. It cannot be longer than 255 characters and must only contain printable ASCII characters.\",\n      \"example\": \"partner-store-unique-identifier\",\n      \"path\": \"X-Store-Id\",\n      \"key\": \"X-Store-Id\",\n      \"name\": \"X-Store-Id\",\n      \"required\": true,\n      \"in\": \"header\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\"\n    },\n    \"sourcePath\": \"metadata.storeId\",\n    \"targetPath\": \"X-Store-Id\",\n    \"sourceNode\": \"trigger\",\n    \"targetNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\"\n  }\n}Step 2: API (identifier:98ef9a91-f0ca-4e0a-acd3-4618904fd6b4) upsertMenu\nStep 2 Data Mapping JSON:\n{\n  \"categories.{{categoryId}}\": {\n    \"id\": \"611e1487-be36-47a2-8105-1c0df515eaf1\",\n    \"stepIndex\": 2,\n    \"input\": {\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n          \"example\": \"b01485b0-034a-47c5-8a0a-0eeca08bf994\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of Category.\",\n          \"example\": \"Drinks\"\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"Description of Category.\",\n          \"example\": \"All drink items served up nice and fresh!\"\n        },\n        \"itemIds\": {\n          \"type\": \"array\",\n          \"default\": [],\n          \"description\": \"All items in the category.\",\n          \"items\": {\n            \"type\": \"string\",\n            \"schemaName\": \"inlineSchema\"\n          },\n          \"example\": [\n            \"fa4f0192-4c4e-4455-9db8-61d428c34969\"\n          ]\n        }\n      },\n      \"description\": \"Categories contain a list of Item references.\",\n      \"path\": \"categories.{{categoryId}}\",\n      \"key\": \"{{categoryId}}\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\",\n          \"path\": \"categories.{{categoryId}}\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n          \"example\": \"b01485b0-034a-47c5-8a0a-0eeca08bf994\",\n          \"required\": true\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of Category.\",\n          \"example\": \"Drinks\",\n          \"required\": true\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"Description of Category.\",\n          \"example\": \"All drink items served up nice and fresh!\",\n          \"required\": false\n        },\n        \"itemIds\": {\n          \"type\": \"array\",\n          \"default\": [],\n          \"description\": \"All items in the category.\",\n          \"items\": {\n            \"type\": \"string\",\n            \"schemaName\": \"inlineSchema\"\n          },\n          \"example\": [\n            \"fa4f0192-4c4e-4455-9db8-61d428c34969\"\n          ],\n          \"required\": false\n        }\n      },\n      \"description\": \"Categories contain a list of Item references.\",\n      \"path\": \"categories.{{categoryId}}\",\n      \"key\": \"{{categoryId}}\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\",\n          \"path\": \"categories.{{categoryId}}\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"8aca87a9-6d8e-4845-8ea6-c1e03c8cf8e6\",\n      \"apiId\": \"98ef9a91-f0ca-4e0a-acd3-4618904fd6b4\"\n    },\n    \"sourcePath\": \"categories.{{categoryId}}\",\n    \"targetPath\": \"categories.{{categoryId}}\",\n    \"sourceNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\",\n    \"targetNode\": \"action-2-5cc517ee-e055-43e8-a9f6-4660fd044a53\"\n  },\n  \"categories.{{categoryId}}.id\": {\n    \"id\": \"3760d45d-366e-483c-92ae-e9385a9fd4e5\",\n    \"stepIndex\": 2,\n    \"input\": {\n      \"type\": \"string\",\n      \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n      \"example\": \"b01485b0-034a-47c5-8a0a-0eeca08bf994\",\n      \"path\": \"categories.{{categoryId}}.id\",\n      \"key\": \"id\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\",\n          \"path\": \"categories.{{categoryId}}.id\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"key\": \"id\",\n      \"path\": \"categories.{{categoryId}}.id\",\n      \"type\": \"string\",\n      \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n      \"example\": \"b01485b0-034a-47c5-8a0a-0eeca08bf994\",\n      \"required\": true,\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"8aca87a9-6d8e-4845-8ea6-c1e03c8cf8e6\",\n      \"apiId\": \"98ef9a91-f0ca-4e0a-acd3-4618904fd6b4\"\n    },\n    \"sourcePath\": \"categories.{{categoryId}}.id\",\n    \"targetPath\": \"categories.{{categoryId}}.id\",\n    \"sourceNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\",\n    \"targetNode\": \"action-2-5cc517ee-e055-43e8-a9f6-4660fd044a53\"\n  },\n  \"categories.{{categoryId}}.name\": {\n    \"id\": \"32baa6f2-9a8a-4d39-88c0-eac4a0143a52\",\n    \"stepIndex\": 2,\n    \"input\": {\n      \"type\": \"string\",\n      \"description\": \"Name of Category.\",\n      \"example\": \"Drinks\",\n      \"path\": \"categories.{{categoryId}}.name\",\n      \"key\": \"name\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\",\n          \"path\": \"categories.{{categoryId}}.name\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"key\": \"name\",\n      \"path\": \"categories.{{categoryId}}.name\",\n      \"type\": \"string\",\n      \"description\": \"Name of Category.\",\n      \"example\": \"Drinks\",\n      \"required\": true,\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{categoryId}}\",\n          \"parentContextKey\": \"categories\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"8aca87a9-6d8e-4845-8ea6-c1e03c8cf8e6\",\n      \"apiId\": \"98ef9a91-f0ca-4e0a-acd3-4618904fd6b4\"\n    },\n    \"sourcePath\": \"categories.{{categoryId}}.name\",\n    \"targetPath\": \"categories.{{categoryId}}.name\",\n    \"sourceNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\",\n    \"targetNode\": \"action-2-5cc517ee-e055-43e8-a9f6-4660fd044a53\"\n  },\n  \"modifierGroups.{{modifierGroupId}}\": {\n    \"id\": \"d32e4dce-e734-49ee-9f68-b43ade92925f\",\n    \"stepIndex\": 2,\n    \"input\": {\n      \"title\": \"All ModifierGroups for the Store, indexed by ID\",\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n          \"example\": \"da0e4e94-5670-4175-897a-3b7dde45bed5\"\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of ModifierGroup.\",\n          \"example\": \"Choose your type of bagel\"\n        },\n        \"minimumSelections\": {\n          \"minimum\": 0,\n          \"type\": \"integer\",\n          \"description\": \"Minimum number of selections customers can make in this ModifierGroup. 0 means no min limits.\",\n          \"format\": \"int32\"\n        },\n        \"maximumSelections\": {\n          \"minimum\": 0,\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of selections customers can make in this ModifierGroup. 0 means no max limits.\",\n          \"format\": \"int32\"\n        },\n        \"maxPerModifierSelectionQuantity\": {\n          \"minimum\": 0,\n          \"default\": 1,\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of selections customers can make for each modifier item in this ModifierGroup. 0 means there is no limit to how many times they can select a single modifier item. If not specified, a value of 1 will be used as the default value.\",\n          \"format\": \"int32\"\n        },\n        \"itemIds\": {\n          \"type\": \"array\",\n          \"default\": [],\n          \"description\": \"Identifiers of each Item within this ModifierGroup.\",\n          \"items\": {\n            \"type\": \"string\",\n            \"schemaName\": \"inlineSchema\"\n          }\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"The description for this modifier group.\",\n          \"example\": \"Choose any of these delicious types of bagels\"\n        }\n      },\n      \"description\": \"Items are sold on the menu. Modifiers to items are items themselves and their relationship is defined by ModifierGroup.\",\n      \"path\": \"modifierGroups.{{modifierGroupId}}\",\n      \"key\": \"{{modifierGroupId}}\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{modifierGroupId}}\",\n          \"parentContextKey\": \"modifierGroups\",\n          \"path\": \"modifierGroups.{{modifierGroupId}}\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"title\": \"All ModifierGroups for the Store, indexed by ID\",\n      \"required\": [\n        \"id\",\n        \"name\"\n      ],\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\",\n          \"description\": \"Identifier for ModifierGroup.\",\n          \"example\": \"db5740de-429c-4f06-b264-3d41dce6d8c3\",\n          \"required\": true\n        },\n        \"name\": {\n          \"type\": \"string\",\n          \"description\": \"Name of ModifierGroup.\",\n          \"example\": \"Choose your type of bagel\",\n          \"required\": true\n        },\n        \"minimumSelections\": {\n          \"minimum\": 0,\n          \"type\": \"integer\",\n          \"description\": \"Minimum number of selections customers can make in this ModifierGroup. 0 means no min limits.\",\n          \"format\": \"int32\",\n          \"required\": false\n        },\n        \"maximumSelections\": {\n          \"minimum\": 0,\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of selections customers can make in this ModifierGroup. 0 means no max limits.\",\n          \"format\": \"int32\",\n          \"required\": false\n        },\n        \"maxPerModifierSelectionQuantity\": {\n          \"minimum\": 0,\n          \"type\": \"integer\",\n          \"description\": \"Maximum number of selections customers can make for each modifier item in this ModifierGroup. 0 means there is no limit to how many times they can select a single modifier item. If not specified, a value of 1 will be used as the default value.\",\n          \"format\": \"int32\",\n          \"required\": false\n        },\n        \"itemIds\": {\n          \"type\": \"array\",\n          \"default\": [],\n          \"description\": \"Identifiers of each Item within this ModifierGroup.\",\n          \"items\": {\n            \"type\": \"string\",\n            \"schemaName\": \"inlineSchema\"\n          },\n          \"required\": false\n        },\n        \"description\": {\n          \"type\": \"string\",\n          \"description\": \"Description for this ModifierGroup.\",\n          \"example\": \"Choose any of these delicious types of bagels\",\n          \"required\": false\n        }\n      },\n      \"description\": \"Items are sold on the menu. Modifiers to items are items themselves and their relationship is defined by ModifierGroup.\",\n      \"path\": \"modifierGroups.{{modifierGroupId}}\",\n      \"key\": \"{{modifierGroupId}}\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{modifierGroupId}}\",\n          \"parentContextKey\": \"modifierGroups\",\n          \"path\": \"modifierGroups.{{modifierGroupId}}\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"8aca87a9-6d8e-4845-8ea6-c1e03c8cf8e6\",\n      \"apiId\": \"98ef9a91-f0ca-4e0a-acd3-4618904fd6b4\"\n    },\n    \"sourcePath\": \"modifierGroups.{{modifierGroupId}}\",\n    \"targetPath\": \"modifierGroups.{{modifierGroupId}}\",\n    \"sourceNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\",\n    \"targetNode\": \"action-2-5cc517ee-e055-43e8-a9f6-4660fd044a53\"\n  },\n  \"modifierGroups.{{modifierGroupId}}.id\": {\n    \"id\": \"84b09a13-24ef-4dd8-a2bf-ae84905eebe6\",\n    \"stepIndex\": 2,\n    \"input\": {\n      \"type\": \"string\",\n      \"description\": \"The identifier that exists in the third party system. During a menu publish event, uuidV4 ids will be generated for new entities that do not yet exist in the internal menu.\",\n      \"example\": \"da0e4e94-5670-4175-897a-3b7dde45bed5\",\n      \"path\": \"modifierGroups.{{modifierGroupId}}.id\",\n      \"key\": \"id\",\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{modifierGroupId}}\",\n          \"parentContextKey\": \"modifierGroups\",\n          \"path\": \"modifierGroups.{{modifierGroupId}}.id\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"5dae6c3d-5e64-4506-aa0c-855ba294bb73\",\n      \"apiId\": \"2389bc50-2646-4e94-bb34-86c9ea23cd7e\",\n      \"formulas\": []\n    },\n    \"output\": {\n      \"key\": \"id\",\n      \"path\": \"modifierGroups.{{modifierGroupId}}.id\",\n      \"type\": \"string\",\n      \"description\": \"Identifier for ModifierGroup.\",\n      \"example\": \"db5740de-429c-4f06-b264-3d41dce6d8c3\",\n      \"required\": true,\n      \"parentContext\": [\n        {\n          \"contextType\": \"dictionary\",\n          \"dictionaryKey\": \"{{modifierGroupId}}\",\n          \"parentContextKey\": \"modifierGroups\"\n        }\n      ],\n      \"in\": \"body\",\n      \"actionId\": \"8aca87a9-6d8e-4845-8ea6-c1e03c8cf8e6\",\n      \"apiId\": \"98ef9a91-f0ca-4e0a-acd3-4618904fd6b4\"\n    },\n    \"sourcePath\": \"modifierGroups.{{modifierGroupId}}.id\",\n    \"targetPath\": \"modifierGroups.{{modifierGroupId}}.id\",\n    \"sourceNode\": \"action-1-9ee52fd7-13e2-4fa0-9830-79d5543e1e32\",\n    \"targetNode\": \"action-2-5cc517ee-e055-43e8-a9f6-4660fd044a53\"\n  }\n}", "additional_kwargs": {}}}, {"type": "human", "data": {"content": "You are a super smart developer. You have been asked to make a specification for a program.\n\nThink step by step to make sure we get a high quality specification and we don't miss anything.\nFirst, be super explicit about what the program should do, which features it should have\nand give details about anything that might be unclear. **Don't leave anything unclear or undefined.**\n\nSecond, lay out the names of the core classes, functions, methods that will be necessary,\nas well as a quick comment on their purpose.\n\nThis specification will be used later as the basis for the implementation.\n", "additional_kwargs": {}, "example": false}}, {"type": "ai", "data": {"content": "Program Specification:\n\nThe program is a Python application that integrates two APIs: Point-of-Sale API and Marketplace API. Both APIs use OAuth2 for authentication. The program is triggered by a webhook called menuPublishWebhook from the Marketplace API. The webhook sends a POST request to a configured URL. The program then performs a series of steps, each of which is an HTTP request to one of the two APIs. The data mapping for each step is provided in JSON format.\n\nThe program should have the following features:\n\n1. Handle the webhook trigger and extract necessary data from the webhook request body.\n2. Perform OAuth2 authentication for both APIs.\n3. Perform HTTP requests to the APIs according to the workflow steps.\n4. Handle the data mapping for each step according to the provided JSON.\n5. Handle any errors or exceptions that may occur during the process.\n\nCore Classes, Functions, and Methods:\n\n1. `WebhookHandler`: This class handles the webhook trigger. It has a method `handle_trigger` that takes the webhook request as input and extracts necessary data.\n\n2. `OAuth2Authenticator`: This class handles OAuth2 authentication for the APIs. It has a method `authenticate` that takes the API credentials as input and returns an access token.\n\n3. `APIRequester`: This class performs HTTP requests to the APIs. It has a method `request` that takes the HTTP method, URL, headers, and body as input and returns the response.\n\n4. `DataMapper`: This class handles the data mapping for each step. It has a method `map_data` that takes the input data and mapping JSON as input and returns the output data.\n\n5. `WorkflowExecutor`: This class executes the workflow steps. It has a method `execute_step` that takes the step index, API, method, URL, headers, body, and data mapping as input and performs the corresponding API request.\n\n6. `ErrorHandler`: This class handles any errors or exceptions that may occur during the process. It has a method `handle_error` that takes an exception as input and logs the error message.\n\n7. `main`: This is the main function of the program. It initializes the classes, handles the webhook trigger, performs the workflow steps, and handles any errors or exceptions.", "additional_kwargs": {}, "example": false}}]