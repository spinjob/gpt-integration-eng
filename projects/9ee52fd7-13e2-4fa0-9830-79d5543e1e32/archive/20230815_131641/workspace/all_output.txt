The application will be implemented in Node.js and will use the following libraries:

- `axios` for making HTTP requests
- `dotenv` for loading environment variables
- `jsonwebtoken` for handling JWT tokens

The application will consist of the following files:

- `index.js`: The entry point of the application
- `api.js`: Contains the API class that handles the interaction with the APIs
- `workflow.js`: Contains the Workflow class that handles the workflow steps
- `package.json`: Contains the application's dependencies and scripts
- `.env`: Contains the application's environment variables

Let's start with the `package.json` file:

`package.json`
```json
{
  "name": "api-integration",
  "version": "1.0.0",
  "description": "API Integration Application",
  "main": "index.js",
  "scripts": {
    "start": "node index.js"
  },
  "dependencies": {
    "axios": "^0.21.1",
    "dotenv": "^8.2.0",
    "jsonwebtoken": "^8.5.1"
  }
}
```

Next, we'll create the `.env` file:

`.env`
```env
API_1_BASE_URL=https://partners.cloudkitchens.com
API_2_BASE_URL=https://partners.cloudkitchens.com
API_1_TOKEN=YOUR_API_1_TOKEN
API_2_TOKEN=YOUR_API_2_TOKEN
```

Now, let's create the `api.js` file:

`api.js`
```javascript
const axios = require('axios');

class API {
  constructor(baseUrl, token) {
    this.baseUrl = baseUrl;
    this.token = token;
  }

  async request(method, path, data, headers) {
    const url = `${this.baseUrl}${path}`;
    const options = {
      method,
      url,
      data,
      headers: {
        ...headers,
        Authorization: `Bearer ${this.token}`
      }
    };

    const response = await axios(options);
    return response.data;
  }
}

module.exports = API;
```

Next, we'll create the `workflow.js` file:

`workflow.js`
```javascript
class Workflow {
  constructor(api1, api2) {
    this.api1 = api1;
    this.api2 = api2;
  }

  async step1() {
    const data = {
      testStoreId: process.env.TEST_STORE_ID
    };

    const headers = {
      'X-Store-Id': process.env.TEST_STORE_ID
    };

    const response = await this.api1.request('GET', '/getMenu', data, headers);
    return response;
  }

  async step2(menu) {
    const data = menu;
    const headers = {};

    const response = await this.api2.request('POST', '/upsertMenu', data, headers);
    return response;
  }

  async run() {
    const menu = await this.step1();
    const result = await this.step2(menu);
    return result;
  }
}

module.exports = Workflow;
```

Finally, we'll create the `index.js` file:

`index.js`
```javascript
require('dotenv').config();
const API = require('./api');
const Workflow = require('./workflow');

const api1 = new API(process.env.API_1_BASE_URL, process.env.API_1_TOKEN);
const api2 = new API(process.env.API_2_BASE_URL, process.env.API_2_TOKEN);

const workflow = new Workflow(api1, api2);

workflow.run()
  .then(result => console.log(result))
  .catch(error => console.error(error));
```

This completes the implementation of the application. The application can be run with the command `npm start`.