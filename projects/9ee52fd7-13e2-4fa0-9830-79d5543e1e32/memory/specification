Program Specification:

The program is a Python application that integrates two APIs, the Marketplace API and the Point-of-Sale API. The program will be triggered by a webhook called menuPublishWebhook from the Marketplace API. The webhook will be configured to send a POST request to a configured URL. 

The program will perform two main steps:

1. Get the menu from the Marketplace API. The request will include a header parameter 'X-Store-Id' which is the unique identifier of the store in the partner application. This ID will be used to match the correct store when performing operations.

2. Upsert the menu to the Point-of-Sale API. The request will include the categories and modifierGroups from the menu retrieved in step 1. Each category and modifierGroup will include an 'id' and 'name' property. The 'id' is the identifier that exists in the third party system and 'name' is the name of the category or modifierGroup.

The program will handle the OAuth2 authentication for both APIs. The client_id and client_secret will be manually configured. The scope and grant_type will be set according to the API's requirements.

Core Classes, Functions, Methods:

1. `OAuth2Client`: This class will handle the OAuth2 authentication for both APIs. It will include methods to generate the access token and refresh the token when it expires.

2. `APIIntegration`: This class will handle the integration between the two APIs. It will include methods to send HTTP requests to the APIs and handle the responses.

3. `WebhookTrigger`: This class will handle the webhook trigger. It will include methods to listen for the webhook and trigger the API integration when the webhook is received.

4. `DataMapping`: This class will handle the data mapping between the two APIs. It will include methods to map the data from the Marketplace API to the format required by the Point-of-Sale API.

5. `main()`: This function will be the entry point of the program. It will initialize the classes and start the webhook listener.

6. `get_menu(store_id: str) -> dict`: This function will send a GET request to the Marketplace API to retrieve the menu for the specified store.

7. `upsert_menu(menu: dict) -> None`: This function will send a POST request to the Point-of-Sale API to upsert the menu.

8. `map_data(data: dict) -> dict`: This function will map the data from the Marketplace API to the format required by the Point-of-Sale API.

9. `handle_webhook(data: dict) -> None`: This function will be triggered when the webhook is received. It will extract the store ID from the webhook data and trigger the API integration.

10. `generate_token() -> str`: This function will send a POST request to the token URL to generate the access token for the OAuth2 authentication.

11. `refresh_token() -> None`: This function will refresh the access token when it expires.